{
	"info": {
		"_postman_id": "dd5dddcc-eef0-4deb-9a6a-28df5a9fef55",
		"name": "User Role Program Batch Map Controller- Kamalika",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Get Assigned Program/Batch(es) of All Users (200) Positive scenario",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aa2507ad-8bfe-4696-b80d-629059cf0f60",
						"exec": [
							"// status code is 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//response time is less than 200 ms",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"//content header present",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"",
							"//content header is JSON",
							"",
							"pm.test('Content-Type Header is application-json', () => {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"})",
							"",
							"",
							"// check the data for each and every object",
							"const response = pm.response.json();",
							"",
							"response.forEach(object => {",
							"    pm.test(\"data types for is correct for user ID \" + object.userId,()=>{",
							"    pm.expect(object.userId).to.be.a(\"string\");",
							"    pm.expect(object.roleId).to.be.a(\"string\");",
							"    pm.expect(object.programId).to.be.a(\"number\");",
							"    pm.expect(object.batchId).to.be.an(\"number\");",
							"    pm.expect(object.userRoleProgramBatchStatus).to.be.a(\"string\");",
							"    });",
							"});",
							"",
							"",
							"// Data content validation",
							"const responseData = pm.response.json();",
							"",
							"pm.test('Each user batch has status active', function () {",
							"    // Iterate through each object in the array",
							"    responseData.forEach(function (user) {",
							"        // status is active check",
							"        pm.expect(user.userRoleProgramBatchStatus).to.be.oneOf(['Active', 'active']); ",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "d38c56b2-3846-4ef6-9014-b16e095768f8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{Bearertoken2}}"
					}
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/userRoleProgramBatchMap",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"userRoleProgramBatchMap"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"description": "application/json",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "test",
			"id": "a9ecef79-1b26-44bb-92d4-af1316dc1b48",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzZGV0b3JnYW5pemVyc0BnbWFpbC5jb20iLCJpYXQiOjE3MDk2OTcyNzcsImV4cCI6MTcwOTcyNjA3N30.Kl4I_NIXdzu-Rcouni8WZjvQJdUWI7GpFiglMPK1XD57dHjN1ZxeLMooRRWhHcxSpd3zIZlu_gHn8xVQrFP4cw"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"programDescription\": \"Testing-team22\",\n  \"programName\": \"team22API\",\n  \"programStatus\": \"Inactive\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://lms-marchapi-hackathon-a258d2bbd43b.herokuapp.com/lms/saveprogram",
					"protocol": "https",
					"host": [
						"lms-marchapi-hackathon-a258d2bbd43b",
						"herokuapp",
						"com"
					],
					"path": [
						"lms",
						"saveprogram"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"description": "application/json",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}